version: '2.1'
services:
  db:
    image: 'postgres:14-alpine'
    env_file:
      - ./env/postgres.env
    volumes:
      - db_data:/var/lib/postgresql/data
    # Open this port if you want to remote access through third party software (e.g DBeaver)
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d lportal -U liferay"]
      interval: 5s
      timeout: 5s
      retries: 5

  elasticsearch:
    build:
      context: .
      dockerfile: ./dockerfiles/elasticsearch.dockerfile
    env_file:
      - ./env/elasticsearch.env
    #Set's memmory use to 1G
    environment:
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    # Open these ports if you want to remote access through third party software
    #ports:
    #  - '9200:9200'
    #  - '9300:9300'
    volumes:
      - elasticData:/usr/share/elasticsearch/data
      - elasticConfig:/usr/share/elasticsearch/config
    healthcheck:
      test: curl -s http://elasticsearch01:9200 >/dev/null || exit 1
      interval: 30s
      timeout: 10s
      retries: 5

  liferay:
    image: 'liferay/portal:7.4.3.20-ga20'
    user: liferay
    env_file:
      - ./env/liferay.env
    volumes:
      - liferay_data:/opt/liferay/data
      - liferay_osgi:/opt/liferay/osgi
      - liferay_license:/opt/liferay/license
      - liferay_logs:/opt/liferay/logs

      - ./files:/mnt/liferay/files
      - ./scripts:/mnt/liferay/scripts
      - ./deploy:/mnt/liferay/deploy
      - ./patching:/mnt/liferay/patching
    ports:
     - '8080:8080'
    depends_on:
      db:
        condition: service_healthy
      elasticsearch:
        condition: service_started
    extra_hosts:
      - "host.docker.internal:host-gateway"

volumes:
  db_data:
  elasticData:
  elasticConfig:
  liferay_data:
  liferay_osgi:
  liferay_license:
  liferay_logs:
